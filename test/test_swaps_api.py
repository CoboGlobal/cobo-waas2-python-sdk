# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2 import Configuration
from cobo_waas2.api.swaps_api import SwapsApi


class TestSwapsApi(unittest.TestCase):
    """SwapsApi unit test stubs"""

    def setUp(self) -> None:
        Configuration.set_default(Configuration(
            api_private_key="c203fccc02a2269ec486d9c32ff74b5ba6ab0cdb461ee1fb0dfc616109115c06",
            host="https://api.sandbox.cobo.com/v2"
        ))
        self.api = SwapsApi()

    def tearDown(self) -> None:
        pass

    def test_create_swap_activity(self) -> None:
        """
        Test case for create_swap_activity

        Create Swap Activity
        """
        """
        create_swap_activity_request = cobo_waas2.CreateSwapActivityRequest()

        api_response = self.api.create_swap_activity(create_swap_activity_request)
        """

    def test_create_swap_quote(self) -> None:
        """
        Test case for create_swap_quote

        Create Swap Quote
        """
        """
        create_swap_quote_request = cobo_waas2.CreateSwapQuoteRequest()

        api_response = self.api.create_swap_quote(create_swap_quote_request)
        """

    def test_get_swap_activity(self) -> None:
        """
        Test case for get_swap_activity

        Get Swap Activity Details
        """
        """
        activity_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479'

        api_response = self.api.get_swap_activity(activity_id)
        """

    def test_get_swap_quote(self) -> None:
        """
        Test case for get_swap_quote

        Get Current Swap Rate
        """
        """
        wallet_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479'
        pay_token_id = 'ETH'
        receive_token_id = 'USDT'
        pay_amount = '1.5'
        receive_amount = '2000'

        api_response = self.api.get_swap_quote(wallet_id, pay_token_id, receive_token_id, pay_amount=pay_amount, receive_amount=receive_amount)
        """

    def test_list_enable_token_pairs(self) -> None:
        """
        Test case for list_enable_token_pairs

        List Supported Token Pairs
        """
        """
        limit = 10
        before = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGmk1'
        after = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGSAk'

        api_response = self.api.list_enable_token_pairs(limit=limit, before=before, after=after)
        """

    def test_list_swap_activities(self) -> None:
        """
        Test case for list_swap_activities

        List Swap Activities
        """
        """
        status = 'Success'
        min_updated_timestamp = 1635744000000
        max_updated_timestamp = 1635744000000
        initiator = 'steve@example.com'
        limit = 10
        before = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGmk1'
        after = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGSAk'
        sort_by = ''
        direction = ''

        api_response = self.api.list_swap_activities(status=status, min_updated_timestamp=min_updated_timestamp, max_updated_timestamp=max_updated_timestamp, initiator=initiator, limit=limit, before=before, after=after, sort_by=sort_by, direction=direction)
        """


if __name__ == '__main__':
    unittest.main()

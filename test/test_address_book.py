# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.address_book import AddressBook


class TestAddressBook(unittest.TestCase):
    """AddressBook unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddressBook:
        """Test AddressBook
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddressBook`
        """
        model = AddressBook()
        if include_optional:
            return AddressBook(
                org_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479',
                entry_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479',
                address = '0x570f02f2b5fcf3ac56fb6703bd7039c0c9e33460',
                memo = '9d4773eb',
                wallet_name = 'Example Wallet',
                wallet_type = 'Custodial',
                wallet_subtype = 'Asset',
                label = 'test',
                chain_ids = [
                    'ETH'
                    ],
                email = 'help@cobo.com',
                encoding = 'ENCODING_P2PKH'
            )
        else:
            return AddressBook(
                org_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479',
                entry_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479',
                address = '0x570f02f2b5fcf3ac56fb6703bd7039c0c9e33460',
                label = 'test',
        )
        """

    def testAddressBook(self):
        """Test AddressBook"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

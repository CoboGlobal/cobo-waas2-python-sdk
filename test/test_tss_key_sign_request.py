# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.tss_key_sign_request import TSSKeySignRequest


class TestTSSKeySignRequest(unittest.TestCase):
    """TSSKeySignRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TSSKeySignRequest:
        """Test TSSKeySignRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TSSKeySignRequest`
        """
        model = TSSKeySignRequest()
        if include_optional:
            return TSSKeySignRequest(
                group_id = 'mMedDioOKhTlhGyQRzMv',
                root_pub_key = 'xpub661MyMwAqRbcG4vPNi58VQJrXW8D9VzmauuRq2rTY3oUVnKGuLTxQxvvoEXgLvZ7N9GQXQkWVgKn1rzEUUEm4NdvrBKUqjpNJEnn2UL4rYq',
                used_node_ids = [
                    '["coboAbCdEfGhIjKlMnOpQrStUvWxYz1234567890abcdefghi","coboBTGDvjJG99pABegvPYmavrcTU3SkjTLHVdsko8dWBga4w"]'
                    ],
                bip32_path_list = [
                    '["m/44/0/2/0/0"]'
                    ],
                msg_hash_list = [
                    '["0x10ED43C718714eb63d5aA57B78B54704E256024EFFFFFFFFFFFFFFFFFFFFFFFF"]'
                    ],
                tweak_list = [
                    '["0x00"]'
                    ],
                signature_type = 1,
                tss_protocol = 1,
                task_id = '20231213122855000000000000000000',
                biz_task_id = 'aff0e1cb-15b2-4e1f-9b9d-a9133715986f'
            )
        else:
            return TSSKeySignRequest(
        )
        """

    def testTSSKeySignRequest(self):
        """Test TSSKeySignRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

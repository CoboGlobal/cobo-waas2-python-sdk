# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.list_settlement_details200_response import ListSettlementDetails200Response


class TestListSettlementDetails200Response(unittest.TestCase):
    """ListSettlementDetails200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListSettlementDetails200Response:
        """Test ListSettlementDetails200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListSettlementDetails200Response`
        """
        model = ListSettlementDetails200Response()
        if include_optional:
            return ListSettlementDetails200Response(
                data = [
                    cobo_waas2.models.settlement_detail.SettlementDetail(
                        currency = 'USD', 
                        token_id = 'ETH_USDT', 
                        chain_id = 'ETH', 
                        merchant_id = 'M1001', 
                        amount = '500.00', 
                        settled_amount = '500.00', 
                        status = 'Pending', 
                        bank_account = cobo_waas2.models.bank_account.BankAccount(
                            bank_account_id = '123e4567-e89b-12d3-a456-426614174003', 
                            info = {"beneficiary_name":"John Doe","beneficiary_address":"123 Main St, Anytown, USA","account_number":"4111111111111111","bank_name":"ABC Bank","bank_country":"USA","bank_address":"456 Bank Ave, Cityville, USA","swift_or_bic":"ABCDEFGH"}, 
                            created_timestamp = 1744689600, 
                            updated_timestamp = 1744689600, ), 
                        transactions = [
                            cobo_waas2.models.payment_transaction.PaymentTransaction(
                                tx_id = 'tx_123e4567-e89b-12d3-a456-426614174003', 
                                tx_hash = '0x742d35Cc6634C0532925a3b844Bc454e4438f44e', 
                                token_id = 'ETH_USDT', 
                                from_address = '0xF8e4bfc10A2821DF52D3322cB5170E5E9276b537', 
                                to_address = '0x15B95A2D8af95D9F48148667B6b8B3CdF89e4F15', 
                                amount = '0.15', 
                                status = 'Submitted', 
                                created_timestamp = 1610445878970, 
                                updated_timestamp = 1610445878970, )
                            ], 
                        created_timestamp = 1744689600, 
                        updated_timestamp = 1744689600, 
                        crypto_address_id = 'addr_ethusdt_20250429T134512_a8c31f', 
                        payout_channel = 'Crypto', 
                        acquiring_type = 'Order', 
                        settlement_request_id = 'S20250304-1001', 
                        order_ids = [
                            'O20250304-M1001-1001'
                            ], )
                    ],
                pagination = cobo_waas2.models.pagination.Pagination(
                    before = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGmk1', 
                    after = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGSAk', 
                    total_count = 10000, )
            )
        else:
            return ListSettlementDetails200Response(
        )
        """

    def testListSettlementDetails200Response(self):
        """Test ListSettlementDetails200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: support@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.list_utxos200_response import ListUtxos200Response


class TestListUtxos200Response(unittest.TestCase):
    """ListUtxos200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListUtxos200Response:
        """Test ListUtxos200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListUtxos200Response`
        """
        model = ListUtxos200Response()
        if include_optional:
            return ListUtxos200Response(
                data = [
                    cobo_waas2.models.utxo.UTXO(
                        tx_hash = 'dd7e1cecf6bbde1844ee1815b780711a1e306a718bcd23cd64401b48ef88eb83', 
                        vout_n = 0, 
                        address = '2N2xFZtbCFB6Nb3Pj9Sxsx5mX2fxX3yEgkE', 
                        token_id = 'BTC', 
                        value = '0.5', 
                        is_coinbase = False, 
                        is_locked = False, 
                        confirmed_number = 66716, )
                    ],
                pagination = cobo_waas2.models.pagination.Pagination(
                    before = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGmk1', 
                    after = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGSAk', 
                    total_count = 10000, )
            )
        else:
            return ListUtxos200Response(
        )
        """

    def testListUtxos200Response(self):
        """Test ListUtxos200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    The version of the OpenAPI document: 1.0.0
    Contact: support@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.transfer_destination import TransferDestination


class TestTransferDestination(unittest.TestCase):
    """TransferDestination unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransferDestination:
        """Test TransferDestination
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransferDestination`
        """
        model = TransferDestination()
        if include_optional:
            return TransferDestination(
                destination_type = 'Address',
                account_output = cobo_waas2.models.address_transfer_destination_account_output.AddressTransferDestination_account_output(
                    address = '19AR6YWEGbSoY8UT9Ksy9WrmrZPD5sL4Ku', 
                    memo = '82840924', 
                    amount = '1.5', ),
                utxo_outputs = [
                    cobo_waas2.models.address_transfer_destination_utxo_outputs_inner.AddressTransferDestination_utxo_outputs_inner(
                        address = '19AR6YWEGbSoY8UT9Ksy9WrmrZPD5sDEMO', 
                        amount = '1.5', 
                        script = '76a914fb37342f6275b13936799def06f2DEMO', )
                    ],
                change_address = '19AR6YWEGbSoY8UT9Ksy9WrmrZPD5sDEMO',
                force_internal = False,
                force_external = False,
                wallet_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479',
                sub_wallet_id = 'Asset',
                amount = '1.5'
            )
        else:
            return TransferDestination(
                destination_type = 'Address',
                wallet_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479',
                sub_wallet_id = 'Asset',
                amount = '1.5',
        )
        """

    def testTransferDestination(self):
        """Test TransferDestination"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

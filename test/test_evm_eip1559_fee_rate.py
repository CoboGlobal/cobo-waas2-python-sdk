# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.evm_eip1559_fee_rate import EvmEip1559FeeRate


class TestEvmEip1559FeeRate(unittest.TestCase):
    """EvmEip1559FeeRate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EvmEip1559FeeRate:
        """Test EvmEip1559FeeRate
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EvmEip1559FeeRate`
        """
        model = EvmEip1559FeeRate()
        if include_optional:
            return EvmEip1559FeeRate(
                fee_type = 'EVM_EIP_1559',
                token_id = 'ETH',
                slow = cobo_waas2.models.evm_eip1559_fee_base_price.EvmEip1559FeeBasePrice(
                    max_fee_per_gas = '9000000000000', 
                    max_priority_fee_per_gas = '1000000000000', ),
                recommended = cobo_waas2.models.evm_eip1559_fee_base_price.EvmEip1559FeeBasePrice(
                    max_fee_per_gas = '9000000000000', 
                    max_priority_fee_per_gas = '1000000000000', ),
                fast = cobo_waas2.models.evm_eip1559_fee_base_price.EvmEip1559FeeBasePrice(
                    max_fee_per_gas = '9000000000000', 
                    max_priority_fee_per_gas = '1000000000000', )
            )
        else:
            return EvmEip1559FeeRate(
                fee_type = 'EVM_EIP_1559',
                token_id = 'ETH',
                recommended = cobo_waas2.models.evm_eip1559_fee_base_price.EvmEip1559FeeBasePrice(
                    max_fee_per_gas = '9000000000000', 
                    max_priority_fee_per_gas = '1000000000000', ),
        )
        """

    def testEvmEip1559FeeRate(self):
        """Test EvmEip1559FeeRate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

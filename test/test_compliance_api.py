# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2 import Configuration
from cobo_waas2.api.compliance_api import ComplianceApi


class TestComplianceApi(unittest.TestCase):
    """ComplianceApi unit test stubs"""

    def setUp(self) -> None:
        Configuration.set_default(Configuration(
            api_private_key="c203fccc02a2269ec486d9c32ff74b5ba6ab0cdb461ee1fb0dfc616109115c06",
            host="https://api.sandbox.cobo.com/v2"
        ))
        self.api = ComplianceApi()

    def tearDown(self) -> None:
        pass

    def test_get_disposition_status(self) -> None:
        """
        Test case for get_disposition_status

        Get disposition status
        """
        """
        transaction_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479'

        api_response = self.api.get_disposition_status(transaction_id)
        """

    def test_isolate_funds(self) -> None:
        """
        Test case for isolate_funds

        Isolate funds
        """
        """
        isolate_disposition = cobo_waas2.IsolateDisposition()

        api_response = self.api.isolate_funds(isolate_disposition=isolate_disposition)
        """

    def test_refund_funds(self) -> None:
        """
        Test case for refund_funds

        Refund funds
        """
        """
        refund_disposition = cobo_waas2.RefundDisposition()

        api_response = self.api.refund_funds(refund_disposition=refund_disposition)
        """

    def test_unfreeze_funds(self) -> None:
        """
        Test case for unfreeze_funds

        Unfreeze frozen funds
        """
        """
        unfreeze_disposition = cobo_waas2.UnfreezeDisposition()

        api_response = self.api.unfreeze_funds(unfreeze_disposition=unfreeze_disposition)
        """


if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.list_top_up_payer_accounts200_response import ListTopUpPayerAccounts200Response


class TestListTopUpPayerAccounts200Response(unittest.TestCase):
    """ListTopUpPayerAccounts200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListTopUpPayerAccounts200Response:
        """Test ListTopUpPayerAccounts200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListTopUpPayerAccounts200Response`
        """
        model = ListTopUpPayerAccounts200Response()
        if include_optional:
            return ListTopUpPayerAccounts200Response(
                data = [
                    cobo_waas2.models.payer_account.PayerAccount(
                        merchant_id = 'M1001', 
                        payer_id = 'P20250619T0310056d7aa', 
                        developer_fee_rate = '0.01', 
                        created_timestamp = 1744689600, 
                        updated_timestamp = 1744693200, 
                        accounts = [
                            cobo_waas2.models.account.Account(
                                token_id = 'ETH_USDT', 
                                address = '0xF8e4bfc10A2821DF52D3322cB5170E5E9276b537', 
                                merchant_balance = '0.15', 
                                psp_balance = '0.15', 
                                created_timestamp = 1610445878970, 
                                updated_timestamp = 1610445878970, )
                            ], )
                    ],
                pagination = cobo_waas2.models.pagination.Pagination(
                    before = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGmk1', 
                    after = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGSAk', 
                    total_count = 10000, )
            )
        else:
            return ListTopUpPayerAccounts200Response(
        )
        """

    def testListTopUpPayerAccounts200Response(self):
        """Test ListTopUpPayerAccounts200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

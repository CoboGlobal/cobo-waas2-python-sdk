# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.payment_estimate_fee201_response import PaymentEstimateFee201Response


class TestPaymentEstimateFee201Response(unittest.TestCase):
    """PaymentEstimateFee201Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaymentEstimateFee201Response:
        """Test PaymentEstimateFee201Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaymentEstimateFee201Response`
        """
        model = PaymentEstimateFee201Response()
        if include_optional:
            return PaymentEstimateFee201Response(
                data = [
                    cobo_waas2.models.payment_estimated_fee.PaymentEstimatedFee(
                        token_id = '', 
                        amount = '500.00', 
                        commission_fee = cobo_waas2.models.commission_fee.CommissionFee(
                            fee_amount = '', ), 
                        bridging_fee = cobo_waas2.models.bridging_fee.BridgingFee(
                            fee_amount = '', 
                            received_token_id = '', 
                            received_amount = '', ), 
                        otc_fee = cobo_waas2.models.otc_fee.OtcFee(
                            fee_rate = '', 
                            token_id = '', ), )
                    ]
            )
        else:
            return PaymentEstimateFee201Response(
        )
        """

    def testPaymentEstimateFee201Response(self):
        """Test PaymentEstimateFee201Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

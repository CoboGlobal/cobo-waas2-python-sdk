# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.crypto_address import CryptoAddress


class TestCryptoAddress(unittest.TestCase):
    """CryptoAddress unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CryptoAddress:
        """Test CryptoAddress
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CryptoAddress`
        """
        model = CryptoAddress()
        if include_optional:
            return CryptoAddress(
                token_id = 'ETH_USDT',
                crypto_address_id = 'addr_ethusdt_20250429T134512_a8c31f',
                address = '0xabc123456789def0000000000000000000000000',
                label = 'Main Payout Wallet',
                created_timestamp = 1744689600,
                updated_timestamp = 1744689600
            )
        else:
            return CryptoAddress(
                token_id = 'ETH_USDT',
                crypto_address_id = 'addr_ethusdt_20250429T134512_a8c31f',
                address = '0xabc123456789def0000000000000000000000000',
        )
        """

    def testCryptoAddress(self):
        """Test CryptoAddress"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

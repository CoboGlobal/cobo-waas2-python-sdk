# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    The version of the OpenAPI document: 1.0.0
    Contact: support@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.list_tss_requests200_response import ListTssRequests200Response


class TestListTssRequests200Response(unittest.TestCase):
    """ListTssRequests200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListTssRequests200Response:
        """Test ListTssRequests200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListTssRequests200Response`
        """
        model = ListTssRequests200Response()
        if include_optional:
            return ListTssRequests200Response(
                data = [
                    cobo_waas2.models.tss_request.TSSRequest(
                        tss_request_id = '20240711114129000132315000003970', 
                        source_key_share_holder_group = cobo_waas2.models.source_group.SourceGroup(
                            key_share_holder_group_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479', 
                            tss_node_ids = [
                                'cobo5yb7BNEBwwp5XXedbhnzQfvQtp132W4dH4Jz4x4eDp4KA'
                                ], ), 
                        target_key_share_holder_group_id = 'fd9519ae-507b-4605-b108-04d4e5ffcdd3', 
                        type = 'KeyGen', 
                        status = 'Success', )
                    ],
                pagination = cobo_waas2.models.pagination.Pagination(
                    before = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGmk1', 
                    after = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGSAk', 
                    total_count = 10000, )
            )
        else:
            return ListTssRequests200Response(
        )
        """

    def testListTssRequests200Response(self):
        """Test ListTssRequests200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

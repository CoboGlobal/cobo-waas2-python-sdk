# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.tss_key_share_sign_event_data import TSSKeyShareSignEventData


class TestTSSKeyShareSignEventData(unittest.TestCase):
    """TSSKeyShareSignEventData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TSSKeyShareSignEventData:
        """Test TSSKeyShareSignEventData
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TSSKeyShareSignEventData`
        """
        model = TSSKeyShareSignEventData()
        if include_optional:
            return TSSKeyShareSignEventData(
                data_type = 'KeyGen',
                request_id = '20231213122855000000000000000000:1',
                request_type = 'KeyGen',
                request_status = 190,
                extra_info = '{"org": {"org_id": "1234567890"}}',
                failed_reason = '',
                request_detail = cobo_waas2.models.tss_key_share_sign_request.TSSKeyShareSignRequest(
                    node_id = 'coboAbCdEfGhIjKlMnOpQrStUvWxYz1234567890abcdefghi', 
                    task_id = '20231213122855000000000000000000', 
                    details = [
                        cobo_waas2.models.tss_key_share_sign_detail.TSSKeyShareSignDetail(
                            group_id = 'mMedDioOKhTlhGyQRzMv', 
                            message = '', )
                        ], 
                    biz_task_id = 'aff0e1cb-15b2-4e1f-9b9d-a9133715986f', ),
                result = cobo_waas2.models.tss_key_share_sign_signatures.TSSKeyShareSignSignatures(
                    signatures = [
                        cobo_waas2.models.tss_key_share_sign_signature.TSSKeyShareSignSignature(
                            group_id = 'mMedDioOKhTlhGyQRzMv', 
                            signed_msg = '0x10ED43C718714eb63d5aA57B78B54704E256024EFFFFFFFFFFFFFFFFFFFFFFFF', 
                            msg_hash = '0x10ED43C718714eb63d5aA57B78B54704E256024EFFFFFFFFFFFFFFFFFFFFFFFF', 
                            signature = '0x10ED43C718714eb63d5aA57B78B54704E256024EFFFFFFFFFFFFFFFFFFFFFFFF', )
                        ], )
            )
        else:
            return TSSKeyShareSignEventData(
                data_type = 'KeyGen',
        )
        """

    def testTSSKeyShareSignEventData(self):
        """Test TSSKeyShareSignEventData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

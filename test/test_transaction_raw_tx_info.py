# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.transaction_raw_tx_info import TransactionRawTxInfo


class TestTransactionRawTxInfo(unittest.TestCase):
    """TransactionRawTxInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransactionRawTxInfo:
        """Test TransactionRawTxInfo
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransactionRawTxInfo`
        """
        model = TransactionRawTxInfo()
        if include_optional:
            return TransactionRawTxInfo(
                used_nonce = 9,
                selected_utxos = [
                    cobo_waas2.models.transaction_selected_utxo.TransactionSelectedUtxo(
                        tx_hash = '7014d7d9b91862d7131f7543d84da3bec60e20be93c23ad01167c48b778fdemo', 
                        vout_n = 0, 
                        address = '2N2xFZtbCFB6Nb3Pj9Sxsx5mX2fxX3yEgkE', 
                        value = '0.5', 
                        redeem_script = '0x1cc56cbbac4622082221a8768d1d0901', 
                        revealed_script = '0x1cc56cbbac4622082221a8768d1d0901', )
                    ],
                raw_tx = '0xa22cb4650000000000000000000000001e0049783f008a0085193e00003d00cd54003c71000000000000000000000000000000000000000000000000000000000000DEMO',
                unsigned_raw_tx = '0xa22cb4650000000000000000000000001e0049783f008a0085193e00003d00cd54003c71000000000000000000000000000000000000000000000000000000000000DEMO',
                utxo_change = cobo_waas2.models.transaction_utxo_change.TransactionUtxoChange(
                    address = '2N2xFZtbCFB6Nb3Pj9Sxsx5mX2fxX3yEgkE', 
                    value = '0.5', )
            )
        else:
            return TransactionRawTxInfo(
        )
        """

    def testTransactionRawTxInfo(self):
        """Test TransactionRawTxInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

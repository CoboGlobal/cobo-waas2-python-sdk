# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2 import Configuration
from cobo_waas2.api.stakings_api import StakingsApi


class TestStakingsApi(unittest.TestCase):
    """StakingsApi unit test stubs"""

    def setUp(self) -> None:
        Configuration.set_default(Configuration(
            api_private_key="c203fccc02a2269ec486d9c32ff74b5ba6ab0cdb461ee1fb0dfc616109115c06",
            host="https://api.sandbox.cobo.com/v2"
        ))
        self.api = StakingsApi()

    def tearDown(self) -> None:
        pass

    def test_create_claim_activity(self) -> None:
        """
        Test case for create_claim_activity

        Create claim activity
        """
        """
        create_claim_activity_request = cobo_waas2.CreateClaimActivityRequest()

        api_response = self.api.create_claim_activity(create_claim_activity_request=create_claim_activity_request)
        """

    def test_create_stake_activity(self) -> None:
        """
        Test case for create_stake_activity

        Create stake activity
        """
        """
        create_stake_activity_request = cobo_waas2.CreateStakeActivityRequest()

        api_response = self.api.create_stake_activity(create_stake_activity_request=create_stake_activity_request)
        """

    def test_create_unstake_activity(self) -> None:
        """
        Test case for create_unstake_activity

        Create unstake activity
        """
        """
        create_unstake_activity_request = cobo_waas2.CreateUnstakeActivityRequest()

        api_response = self.api.create_unstake_activity(create_unstake_activity_request=create_unstake_activity_request)
        """

    def test_create_withdraw_activity(self) -> None:
        """
        Test case for create_withdraw_activity

        Create withdraw activity
        """
        """
        create_withdraw_activity_request = cobo_waas2.CreateWithdrawActivityRequest()

        api_response = self.api.create_withdraw_activity(create_withdraw_activity_request=create_withdraw_activity_request)
        """

    def test_get_staking_activity_by_id(self) -> None:
        """
        Test case for get_staking_activity_by_id

        Get staking activity details
        """
        """
        activity_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479'

        api_response = self.api.get_staking_activity_by_id(activity_id)
        """

    def test_get_staking_by_id(self) -> None:
        """
        Test case for get_staking_by_id

        Get staking position details
        """
        """
        staking_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479'

        api_response = self.api.get_staking_by_id(staking_id)
        """

    def test_get_staking_estimation_fee(self) -> None:
        """
        Test case for get_staking_estimation_fee

        Estimate staking fees
        """
        """
        get_staking_estimation_fee_request = cobo_waas2.GetStakingEstimationFeeRequest()

        api_response = self.api.get_staking_estimation_fee(get_staking_estimation_fee_request=get_staking_estimation_fee_request)
        """

    def test_get_staking_estimation_fee_v2(self) -> None:
        """
        Test case for get_staking_estimation_fee_v2

        Estimate staking fees
        """
        """
        get_staking_estimation_fee_request = cobo_waas2.GetStakingEstimationFeeRequest()

        api_response = self.api.get_staking_estimation_fee_v2(get_staking_estimation_fee_request=get_staking_estimation_fee_request)
        """

    def test_get_staking_pool_by_id(self) -> None:
        """
        Test case for get_staking_pool_by_id

        Get staking pool details
        """
        """
        pool_id = 'babylon_btc'

        api_response = self.api.get_staking_pool_by_id(pool_id)
        """

    def test_list_staking_activities(self) -> None:
        """
        Test case for list_staking_activities

        List staking activities
        """
        """
        pool_id = 'babylon_btc'
        staking_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479'
        activity_type = cobo_waas2.ActivityType()
        activity_status = cobo_waas2.ActivityStatus()
        min_modified_timestamp = 1635744000000
        max_modified_timestamp = 1635744000000
        initiator = 'steve@example.com'
        limit = 10
        before = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGmk1'
        after = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGSAk'

        api_response = self.api.list_staking_activities(pool_id=pool_id, staking_id=staking_id, activity_type=activity_type, activity_status=activity_status, min_modified_timestamp=min_modified_timestamp, max_modified_timestamp=max_modified_timestamp, initiator=initiator, limit=limit, before=before, after=after)
        """

    def test_list_staking_pools(self) -> None:
        """
        Test case for list_staking_pools

        List staking pools
        """
        """
        chain_id = 'ETH'
        token_id = 'ETH_USDT'
        limit = 10
        before = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGmk1'
        after = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGSAk'

        api_response = self.api.list_staking_pools(chain_id=chain_id, token_id=token_id, limit=limit, before=before, after=after)
        """

    def test_list_stakings(self) -> None:
        """
        Test case for list_stakings

        List staking positions
        """
        """
        pool_id = 'babylon_btc'
        statuses = 'Active,StakeInProgress,'
        wallet_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479'
        token_id = 'ETH_USDT'
        limit = 10
        before = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGmk1'
        after = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGSAk'

        api_response = self.api.list_stakings(pool_id=pool_id, statuses=statuses, wallet_id=wallet_id, token_id=token_id, limit=limit, before=before, after=after)
        """


if __name__ == '__main__':
    unittest.main()

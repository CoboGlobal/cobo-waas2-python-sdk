# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.get_transaction_limitation200_response import GetTransactionLimitation200Response


class TestGetTransactionLimitation200Response(unittest.TestCase):
    """GetTransactionLimitation200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetTransactionLimitation200Response:
        """Test GetTransactionLimitation200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetTransactionLimitation200Response`
        """
        model = GetTransactionLimitation200Response()
        if include_optional:
            return GetTransactionLimitation200Response(
                vasp_list = [
                    cobo_waas2.models.vasp.Vasp(
                        name = 'ManyAges', 
                        vendor_code = 'NB', 
                        vendor_vasp_id = 'did:ethr:0x34414c8d5c8ed6f242aa6558ecb500283bab10f4', )
                    ],
                is_threshold_reached = True,
                self_custody_wallet_challenge = 'Hi, please sign this message to confirm that you are the owner of this wallet address.
The transfer can only proceed after signing.
- Address: 0x1234567890abcdef1234567890abcdef12345678
- Nonce: b2860f5c9f201a81bc76f33e991c1f24
- Timestamp: 1732523887
',
                connect_wallet_list = [
                    'metamask'
                    ]
            )
        else:
            return GetTransactionLimitation200Response(
        )
        """

    def testGetTransactionLimitation200Response(self):
        """Test GetTransactionLimitation200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

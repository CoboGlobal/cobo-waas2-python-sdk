# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.list_top_up_payers200_response_data_inner import ListTopUpPayers200ResponseDataInner


class TestListTopUpPayers200ResponseDataInner(unittest.TestCase):
    """ListTopUpPayers200ResponseDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListTopUpPayers200ResponseDataInner:
        """Test ListTopUpPayers200ResponseDataInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListTopUpPayers200ResponseDataInner`
        """
        model = ListTopUpPayers200ResponseDataInner()
        if include_optional:
            return ListTopUpPayers200ResponseDataInner(
                merchant_id = 'M1001',
                payer_id = 'P20250619T0310056d7aa',
                developer_fee_rate = '0.01',
                created_timestamp = 1744689600,
                updated_timestamp = 1744693200,
                transactions = [
                    cobo_waas2.models.payment_transaction.PaymentTransaction(
                        tx_id = 'tx_123e4567-e89b-12d3-a456-426614174003', 
                        tx_hash = '0x742d35Cc6634C0532925a3b844Bc454e4438f44e', 
                        token_id = 'ETH_USDT', 
                        from_address = '0xF8e4bfc10A2821DF52D3322cB5170E5E9276b537', 
                        to_address = '0x15B95A2D8af95D9F48148667B6b8B3CdF89e4F15', 
                        amount = '0.15', 
                        status = 'Submitted', 
                        created_timestamp = 1610445878970, 
                        updated_timestamp = 1610445878970, )
                    ]
            )
        else:
            return ListTopUpPayers200ResponseDataInner(
                merchant_id = 'M1001',
                payer_id = 'P20250619T0310056d7aa',
                developer_fee_rate = '0.01',
        )
        """

    def testListTopUpPayers200ResponseDataInner(self):
        """Test ListTopUpPayers200ResponseDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.payer_account import PayerAccount


class TestPayerAccount(unittest.TestCase):
    """PayerAccount unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PayerAccount:
        """Test PayerAccount
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PayerAccount`
        """
        model = PayerAccount()
        if include_optional:
            return PayerAccount(
                merchant_id = 'M1001',
                payer_id = 'P20250619T0310056d7aa',
                developer_fee_rate = '0.01',
                created_timestamp = 1744689600,
                updated_timestamp = 1744693200,
                accounts = [
                    cobo_waas2.models.account.Account(
                        token_id = 'ETH_USDT', 
                        address = '0xF8e4bfc10A2821DF52D3322cB5170E5E9276b537', 
                        merchant_balance = '0.15', 
                        psp_balance = '0.15', 
                        created_timestamp = 1610445878970, 
                        updated_timestamp = 1610445878970, )
                    ]
            )
        else:
            return PayerAccount(
                merchant_id = 'M1001',
                payer_id = 'P20250619T0310056d7aa',
                developer_fee_rate = '0.01',
        )
        """

    def testPayerAccount(self):
        """Test PayerAccount"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.list_staking_activities200_response import ListStakingActivities200Response


class TestListStakingActivities200Response(unittest.TestCase):
    """ListStakingActivities200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListStakingActivities200Response:
        """Test ListStakingActivities200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListStakingActivities200Response`
        """
        model = ListStakingActivities200Response()
        if include_optional:
            return ListStakingActivities200Response(
                data = [
                    cobo_waas2.models.activity.Activity(
                        id = '0011039d-27fb-49ba-b172-6e0aa80e37ec', 
                        initiator = 'steve@example.com', 
                        initiator_type = 'API', 
                        type = 'Stake', 
                        wallet_id = '0111039d-27fb-49ba-b172-6e0aa80e37ec', 
                        address = '0xAbCdE123456789aBcDeF123456789aBcDeF12345', 
                        pool_id = 'babylon_btc', 
                        token_id = 'BTC', 
                        staking_id = '0011039d-27fb-49ba-b172-6e0aa80e37ec', 
                        amount = '100.00', 
                        transaction_ids = [
                            '0011039d-27fb-49ba-b172-6e0aa80e37ec'
                            ], 
                        timeline = [
                            cobo_waas2.models.activity_timeline.ActivityTimeline(
                                action = 'Submitted', 
                                status = 'success', 
                                timestamp = 1640995200000, 
                                transaction_id = 'aff0e1cb-15b2-4e1f-9b9d-a9133715986f', )
                            ], 
                        fee = null, 
                        status = 'Success', 
                        created_timestamp = 1640995200000, 
                        updated_timestamp = 1640995200000, )
                    ],
                pagination = cobo_waas2.models.pagination.Pagination(
                    before = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGmk1', 
                    after = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGSAk', 
                    total_count = 10000, )
            )
        else:
            return ListStakingActivities200Response(
        )
        """

    def testListStakingActivities200Response(self):
        """Test ListStakingActivities200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.tokenization_token_permissions_response import TokenizationTokenPermissionsResponse


class TestTokenizationTokenPermissionsResponse(unittest.TestCase):
    """TokenizationTokenPermissionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TokenizationTokenPermissionsResponse:
        """Test TokenizationTokenPermissionsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TokenizationTokenPermissionsResponse`
        """
        model = TokenizationTokenPermissionsResponse()
        if include_optional:
            return TokenizationTokenPermissionsResponse(
                permissions = [
                    cobo_waas2.models.tokenization_token_permission.TokenizationTokenPermission(
                        permission_type = 'MintTokens', 
                        name = 'Mint Tokens', 
                        description = 'Mint new tokens to a specified address.', 
                        enabled = True, )
                    ],
                total_count = 7
            )
        else:
            return TokenizationTokenPermissionsResponse(
                permissions = [
                    cobo_waas2.models.tokenization_token_permission.TokenizationTokenPermission(
                        permission_type = 'MintTokens', 
                        name = 'Mint Tokens', 
                        description = 'Mint new tokens to a specified address.', 
                        enabled = True, )
                    ],
                total_count = 7,
        )
        """

    def testTokenizationTokenPermissionsResponse(self):
        """Test TokenizationTokenPermissionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

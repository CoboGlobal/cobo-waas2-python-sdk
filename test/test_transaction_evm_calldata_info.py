# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.transaction_evm_calldata_info import TransactionEvmCalldataInfo


class TestTransactionEvmCalldataInfo(unittest.TestCase):
    """TransactionEvmCalldataInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransactionEvmCalldataInfo:
        """Test TransactionEvmCalldataInfo
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransactionEvmCalldataInfo`
        """
        model = TransactionEvmCalldataInfo()
        if include_optional:
            return TransactionEvmCalldataInfo(
                chain_id = 'ETH',
                address = '0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84',
                name = 'AppProxyUpgradeable',
                impl_address = '0x17144556fd3424edc8fc8a4c940b2d04936d17eb',
                impl_name = 'Lido',
                proxy = True,
                method = cobo_waas2.models.transaction_evm_contract_method.TransactionEvmContractMethod(
                    name = 'transfer', 
                    sig = 'transfer(address,uint256)', 
                    type = 'Function', 
                    payable = True, 
                    selector = '0xa9059cbb', ),
                params = '[["exactInput", "tuple", [["dstReceiver", "address", "0xbbff75515f6e924441c3d80af4714edf19911111"], ["wrappedToken", "address", "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"], ["router", "uint256", "452312848583266388373324160887510303453432363010492966520592108215996663949"], ["amount", "uint256", "10000000000000000"], ["minReturnAmount", "uint256", "369987456553029"], ["fee", "uint256", "30000000000000"], ["path", "address[]", [["[0]", "address", "0x0000000000000000000000000000000000000000"], ["[1]", "address", "0x1ae21d57afc033a556ef63daa216046321b3d391"]]], ["pool", "address[]", [["[0]", "address", "0x725522665fa5e1fa2912fed453dc0044deda5cfd"]]], ["signature", "bytes", "0x"], ["channel", "string", "android"]]], ["deadline", "uint256", "1729582030"]]'
            )
        else:
            return TransactionEvmCalldataInfo(
        )
        """

    def testTransactionEvmCalldataInfo(self):
        """Test TransactionEvmCalldataInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

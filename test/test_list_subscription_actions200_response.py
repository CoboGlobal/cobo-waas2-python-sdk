# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.list_subscription_actions200_response import ListSubscriptionActions200Response


class TestListSubscriptionActions200Response(unittest.TestCase):
    """ListSubscriptionActions200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListSubscriptionActions200Response:
        """Test ListSubscriptionActions200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListSubscriptionActions200Response`
        """
        model = ListSubscriptionActions200Response()
        if include_optional:
            return ListSubscriptionActions200Response(
                data = [
                    cobo_waas2.models.payment_subscription_action.PaymentSubscriptionAction(
                        request_id = '123e457-e89b-12d3-a456-426614174004', 
                        subscription_action_id = '123e457-e89b-12d3-a456-426614174004', 
                        plan_id = '123e457-e89b-12d3-a456-426614174004', 
                        subscription_id = '123e457-e89b-12d3-a456-426614174004', 
                        merchant_id = '123e457-e89b-12d3-a456-426614174004', 
                        merchant_address = '0x8a73abedb3053b17204b887af6231a8ac35fc2cc', 
                        data = null, 
                        status = 'Pending', 
                        created_timestamp = 1744689600, 
                        updated_timestamp = 1744689600, )
                    ],
                pagination = cobo_waas2.models.pagination.Pagination(
                    before = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGmk1', 
                    after = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGSAk', 
                    total_count = 10000, )
            )
        else:
            return ListSubscriptionActions200Response(
        )
        """

    def testListSubscriptionActions200Response(self):
        """Test ListSubscriptionActions200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

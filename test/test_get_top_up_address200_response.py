# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.get_top_up_address200_response import GetTopUpAddress200Response


class TestGetTopUpAddress200Response(unittest.TestCase):
    """GetTopUpAddress200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetTopUpAddress200Response:
        """Test GetTopUpAddress200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetTopUpAddress200Response`
        """
        model = GetTopUpAddress200Response()
        if include_optional:
            return GetTopUpAddress200Response(
                address = '0x1234567890abcdef...',
                payer_id = 'P20250619T0310056d7aa',
                custom_payer_id = 'user_abc_10001',
                merchant_id = 'M1001',
                token_id = 'ETH_USDT',
                chain = 'ETH',
                developer_fee_rate = '0.01',
                min_amount = '0.1',
                created_timestamp = 1744689600,
                updated_timestamp = 1744689600
            )
        else:
            return GetTopUpAddress200Response(
                address = '0x1234567890abcdef...',
                payer_id = 'P20250619T0310056d7aa',
                custom_payer_id = 'user_abc_10001',
                merchant_id = 'M1001',
                token_id = 'ETH_USDT',
                min_amount = '0.1',
        )
        """

    def testGetTopUpAddress200Response(self):
        """Test GetTopUpAddress200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

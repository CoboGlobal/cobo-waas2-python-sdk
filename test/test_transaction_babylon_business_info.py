# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.transaction_babylon_business_info import TransactionBabylonBusinessInfo


class TestTransactionBabylonBusinessInfo(unittest.TestCase):
    """TransactionBabylonBusinessInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransactionBabylonBusinessInfo:
        """Test TransactionBabylonBusinessInfo
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransactionBabylonBusinessInfo`
        """
        model = TransactionBabylonBusinessInfo()
        if include_optional:
            return TransactionBabylonBusinessInfo(
                extra_type = 'BabylonBusinessInfo',
                babylon_address_info = cobo_waas2.models.address_info.AddressInfo(
                    address = '0x0000000000000000000000000000000000000000', 
                    chain_id = 'ETH', 
                    memo = '82840924', 
                    path = 'm/44/0/2/0/0', 
                    encoding = 'ENCODING_P2PKH', 
                    pubkey = 'xpub6HFaEKt4XdwgEQrQmWr8AEAZ7XBSGh7QYFspwdE86sJn6PjkqsPwVQc2poriBdizqXnTB3UWurJJAZpFnD2DAp9vFTmM2gQ264AArYtFWLH', 
                    x_only_pubkey = '0x165ed2f04462ec0d3d44dc8690fa9000903b5a96f14ad7f233c21ff748a17b54', 
                    root_pubkey = 'xpub661MyMwAqRbcG4vPNi58VQJrXW8D9VzmauuRq2rTY3oUVnKGuLTxQxvvoEXgLvZ7N9GQXQkWVgKn1rzEUUEm4NdvrBKUqjpNJEnn2UL4rYq', 
                    taproot_script_tree_hash = '0x138fdd0f6c3803d45553e730c25924baf7be741b8a72a4e6fdbd9d44cb19f85b', 
                    taproot_internal_address = '3HYV6ta67197syD1ZVFganpmL2wLz4RyoC', ),
                btc_address_info = cobo_waas2.models.address_info.AddressInfo(
                    address = '0x0000000000000000000000000000000000000000', 
                    chain_id = 'ETH', 
                    memo = '82840924', 
                    path = 'm/44/0/2/0/0', 
                    encoding = 'ENCODING_P2PKH', 
                    pubkey = 'xpub6HFaEKt4XdwgEQrQmWr8AEAZ7XBSGh7QYFspwdE86sJn6PjkqsPwVQc2poriBdizqXnTB3UWurJJAZpFnD2DAp9vFTmM2gQ264AArYtFWLH', 
                    x_only_pubkey = '0x165ed2f04462ec0d3d44dc8690fa9000903b5a96f14ad7f233c21ff748a17b54', 
                    root_pubkey = 'xpub661MyMwAqRbcG4vPNi58VQJrXW8D9VzmauuRq2rTY3oUVnKGuLTxQxvvoEXgLvZ7N9GQXQkWVgKn1rzEUUEm4NdvrBKUqjpNJEnn2UL4rYq', 
                    taproot_script_tree_hash = '0x138fdd0f6c3803d45553e730c25924baf7be741b8a72a4e6fdbd9d44cb19f85b', 
                    taproot_internal_address = '3HYV6ta67197syD1ZVFganpmL2wLz4RyoC', )
            )
        else:
            return TransactionBabylonBusinessInfo(
                extra_type = 'BabylonBusinessInfo',
        )
        """

    def testTransactionBabylonBusinessInfo(self):
        """Test TransactionBabylonBusinessInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.supported_token import SupportedToken


class TestSupportedToken(unittest.TestCase):
    """SupportedToken unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SupportedToken:
        """Test SupportedToken
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SupportedToken`
        """
        model = SupportedToken()
        if include_optional:
            return SupportedToken(
                token_id = 'ETH_USDT',
                name = 'Tether USD',
                symbol = 'USDT',
                decimal = 6,
                token_address = '0xdac17f958d2ee523a2206206994597c13d831ec7',
                chain_id = 'ETH',
                chain_symbol = 'ETH',
                chain_icon_url = 'https://example.com/icons/eth.png',
                token_icon_url = 'https://example.com/icons/usdt.png',
                can_off_ramp = True
            )
        else:
            return SupportedToken(
                token_id = 'ETH_USDT',
                name = 'Tether USD',
                symbol = 'USDT',
                decimal = 6,
                token_address = '0xdac17f958d2ee523a2206206994597c13d831ec7',
                chain_id = 'ETH',
                chain_symbol = 'ETH',
        )
        """

    def testSupportedToken(self):
        """Test SupportedToken"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

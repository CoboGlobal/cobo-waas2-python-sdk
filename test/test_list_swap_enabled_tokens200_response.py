# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.list_swap_enabled_tokens200_response import ListSwapEnabledTokens200Response


class TestListSwapEnabledTokens200Response(unittest.TestCase):
    """ListSwapEnabledTokens200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListSwapEnabledTokens200Response:
        """Test ListSwapEnabledTokens200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListSwapEnabledTokens200Response`
        """
        model = ListSwapEnabledTokens200Response()
        if include_optional:
            return ListSwapEnabledTokens200Response(
                data = [
                    cobo_waas2.models.swap_token.SwapToken(
                        token_id = 'ETH_USDT', 
                        chain_id = 'ETH', 
                        asset_id = 'ETH', 
                        token_address = '0xdAC17F958D2ee523a2206206994597C13D831ec7', 
                        min_amount = '1000', 
                        max_amount = '100000', )
                    ],
                pagination = cobo_waas2.models.pagination.Pagination(
                    before = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGmk1', 
                    after = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGSAk', 
                    total_count = 10000, )
            )
        else:
            return ListSwapEnabledTokens200Response(
        )
        """

    def testListSwapEnabledTokens200Response(self):
        """Test ListSwapEnabledTokens200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

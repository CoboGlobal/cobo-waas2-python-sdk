# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.tss_key_reshare_event_data import TSSKeyReshareEventData


class TestTSSKeyReshareEventData(unittest.TestCase):
    """TSSKeyReshareEventData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TSSKeyReshareEventData:
        """Test TSSKeyReshareEventData
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TSSKeyReshareEventData`
        """
        model = TSSKeyReshareEventData()
        if include_optional:
            return TSSKeyReshareEventData(
                data_type = 'KeyGen',
                request_id = '20231213122855000000000000000000:1',
                request_type = 'KeyGen',
                request_status = 190,
                extra_info = '{"org": {"org_id": "1234567890"}}',
                failed_reason = '',
                request_detail = cobo_waas2.models.tss_key_reshare_request.TSSKeyReshareRequest(
                    old_group_id = 'mMedDioOKhTlhGyQRzMv', 
                    root_pub_key = 'xpub661MyMwAqRbcG4vPNi58VQJrXW8D9VzmauuRq2rTY3oUVnKGuLTxQxvvoEXgLvZ7N9GQXQkWVgKn1rzEUUEm4NdvrBKUqjpNJEnn2UL4rYq', 
                    curve = 0, 
                    used_node_ids = [
                        '["coboAbCdEfGhIjKlMnOpQrStUvWxYz1234567890abcdefghi","coboBTGDvjJG99pABegvPYmavrcTU3SkjTLHVdsko8dWBga4w"]'
                        ], 
                    old_threshold = 2, 
                    new_threshold = 2, 
                    new_node_ids = [
                        '["coboAbCdEfGhIjKlMnOpQrStUvWxYz1234567890abcdefghi","coboBTGDvjJG99pABegvPYmavrcTU3SkjTLHVdsko8dWBga4w"]'
                        ], 
                    task_id = '20231213122855000000000000000000', 
                    biz_task_id = '20231213122855000000000000000000', ),
                result = cobo_waas2.models.tss_group.TSSGroup(
                    id = 'mMedDioOKhTlhGyQRzMv', 
                    canonical_group_id = '', 
                    protocol_group_id = '', 
                    protocol_type = '', 
                    created_timestamp = 1701396866000, 
                    type = 1, 
                    root_extended_public_key = 'xpub661MyMwAqRbcG4vPNi58VQJrXW8D9VzmauuRq2rTY3oUVnKGuLTxQxvvoEXgLvZ7N9GQXQkWVgKn1rzEUUEm4NdvrBKUqjpNJEnn2UL4rYq', 
                    chaincode = '', 
                    curve = 'secp256k1', 
                    threshold = 56, 
                    participants = [
                        cobo_waas2.models.tss_participant.TSSParticipant(
                            node_id = 'coboAbCdEfGhIjKlMnOpQrStUvWxYz1234567890abcdefghi', 
                            share_id = '619693302942100684578205955442284626185', 
                            share_public_key = '0x217223cdea6b19af34131447763a269d1dbef580bc85272a5bdfc59fa4940cca', )
                        ], )
            )
        else:
            return TSSKeyReshareEventData(
                data_type = 'KeyGen',
        )
        """

    def testTSSKeyReshareEventData(self):
        """Test TSSKeyReshareEventData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

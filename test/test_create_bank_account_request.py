# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.create_bank_account_request import CreateBankAccountRequest


class TestCreateBankAccountRequest(unittest.TestCase):
    """CreateBankAccountRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateBankAccountRequest:
        """Test CreateBankAccountRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateBankAccountRequest`
        """
        model = CreateBankAccountRequest()
        if include_optional:
            return CreateBankAccountRequest(
                otc_bank_account_id = '',
                info = {"beneficiary_name":"John Doe","beneficiary_address":"123 Main St, Anytown, USA","account_number":"4111111111111111","bank_name":"ABC Bank","bank_address":"456 Bank Ave, Cityville, USA","swift_or_bic":"ABCDEFGH"}
            )
        else:
            return CreateBankAccountRequest(
                otc_bank_account_id = '',
                info = {"beneficiary_name":"John Doe","beneficiary_address":"123 Main St, Anytown, USA","account_number":"4111111111111111","bank_name":"ABC Bank","bank_address":"456 Bank Ave, Cityville, USA","swift_or_bic":"ABCDEFGH"},
        )
        """

    def testCreateBankAccountRequest(self):
        """Test CreateBankAccountRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

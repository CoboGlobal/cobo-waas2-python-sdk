# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.create_refund_request import CreateRefundRequest


class TestCreateRefundRequest(unittest.TestCase):
    """CreateRefundRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateRefundRequest:
        """Test CreateRefundRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateRefundRequest`
        """
        model = CreateRefundRequest()
        if include_optional:
            return CreateRefundRequest(
                request_id = '123e4567-e89b-12d3-a456-426614174004',
                merchant_id = 'M1001',
                payable_amount = '0.0025',
                to_address = '0x9876543210abcdef1234567890abcdef12345678',
                token_id = 'ETH_USDT',
                refund_type = 'Merchant',
                order_id = 'R20250304-M1001-1001'
            )
        else:
            return CreateRefundRequest(
                request_id = '123e4567-e89b-12d3-a456-426614174004',
                payable_amount = '0.0025',
                to_address = '0x9876543210abcdef1234567890abcdef12345678',
                token_id = 'ETH_USDT',
                refund_type = 'Merchant',
        )
        """

    def testCreateRefundRequest(self):
        """Test CreateRefundRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

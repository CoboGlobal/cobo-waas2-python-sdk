# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.approval_user_detail import ApprovalUserDetail


class TestApprovalUserDetail(unittest.TestCase):
    """ApprovalUserDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApprovalUserDetail:
        """Test ApprovalUserDetail
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApprovalUserDetail`
        """
        model = ApprovalUserDetail()
        if include_optional:
            return ApprovalUserDetail(
                user_email = 'example@gmail.com',
                pubkey = '0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef',
                signature = '0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef',
                statement_uuid = 'aff0e1cb-15b2-4e1f-9b9d-a9133715986f',
                result = 1,
                created_time = 1610444045,
                template_version = '1.0.0',
                header_title = 'Transaction Approval',
                is_for_sign = True,
                show_info = cobo_waas2.models.approval_show_info.ApprovalShowInfo(
                    org_name = 'Cobo', 
                    wallet_name = 'Cobo Wallet', 
                    environment = 'Prod', 
                    from_address_label = 'Main Address', 
                    to_address_label = 'Exchange Address', )
            )
        else:
            return ApprovalUserDetail(
        )
        """

    def testApprovalUserDetail(self):
        """Test ApprovalUserDetail"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

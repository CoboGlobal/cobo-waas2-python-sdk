# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.bookkeeping_record import BookkeepingRecord


class TestBookkeepingRecord(unittest.TestCase):
    """BookkeepingRecord unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BookkeepingRecord:
        """Test BookkeepingRecord
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BookkeepingRecord`
        """
        model = BookkeepingRecord()
        if include_optional:
            return BookkeepingRecord(
                wallet_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479',
                wallet_type = 'Custodial',
                wallet_name = 'Example Wallet',
                transaction_timestamp = 1610445878970,
                token_id = 'ETH_USDT',
                type = 'Deposit',
                amount = '10.5',
                balance = '10.5',
                from_address = '19AR6YWEGbSoY8UT9Ksy9WrmrZPD5sDEMO',
                to_address = '19AR6YWEGbSoY8UT9Ksy9WrmrZPD5sDEM)',
                transaction_hash = '239861be9a4afe080c359b7fe4a1d035945ec46256b1a0f44d1267c71de8ec28'
            )
        else:
            return BookkeepingRecord(
                wallet_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479',
                transaction_timestamp = 1610445878970,
                token_id = 'ETH_USDT',
                type = 'Deposit',
                amount = '10.5',
                balance = '10.5',
        )
        """

    def testBookkeepingRecord(self):
        """Test BookkeepingRecord"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.webhook_event_data import WebhookEventData


class TestWebhookEventData(unittest.TestCase):
    """WebhookEventData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhookEventData:
        """Test WebhookEventData
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebhookEventData`
        """
        model = WebhookEventData()
        if include_optional:
            return WebhookEventData(
                data_type = 'Transaction',
                transaction_id = 'aff0e1cb-15b2-4e1f-9b9d-a9133715986f',
                cobo_id = '20231213122855000000000000000000',
                request_id = '760a1955-e212-4dfb-a8d0-e66312a1a051',
                wallet_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479',
                type = 'Deposit',
                status = 'Submitted',
                sub_status = 'PendingDoubleCheck',
                failed_reason = 'Rejected by signer Cobo TSS',
                chain_id = 'ETH',
                token_id = 'ETH_USDT',
                asset_id = 'USDT',
                source = None,
                destination = None,
                result = None,
                fee = None,
                initiator = 'API Prod Key #1',
                initiator_type = 'API',
                confirmed_num = 12,
                confirming_threshold = 15,
                transaction_hash = '239861be9a4afe080c359b7fe4a1d035945ec46256b1a0f44d1267c71de8ec28',
                block_info = cobo_waas2.models.transaction_block_info.TransactionBlockInfo(
                    block_number = 123, 
                    block_timestamp = 1717740319, 
                    block_hash = '0xc9ee947f8bb6027c161888bf0d004bec05e7c2beec7e6b187dc512174e438735', ),
                raw_tx_info = cobo_waas2.models.transaction_raw_tx_info.TransactionRawTxInfo(
                    used_nonce = 9, 
                    selected_utxos = [
                        cobo_waas2.models.transaction_selected_utxo.TransactionSelectedUtxo(
                            tx_hash = '7014d7d9b91862d7131f7543d84da3bec60e20be93c23ad01167c48b778fdemo', 
                            vout_n = 0, 
                            address = '2N2xFZtbCFB6Nb3Pj9Sxsx5mX2fxX3yEgkE', 
                            value = '0.5', 
                            redeem_script = '0x1cc56cbbac4622082221a8768d1d0901', 
                            revealed_script = '0x1cc56cbbac4622082221a8768d1d0901', )
                        ], 
                    raw_tx = '0xa22cb4650000000000000000000000001e0049783f008a0085193e00003d00cd54003c71000000000000000000000000000000000000000000000000000000000000DEMO', 
                    unsigned_raw_tx = '0xa22cb4650000000000000000000000001e0049783f008a0085193e00003d00cd54003c71000000000000000000000000000000000000000000000000000000000000DEMO', 
                    utxo_change = cobo_waas2.models.transaction_utxo_change.TransactionUtxoChange(
                        address = '2N2xFZtbCFB6Nb3Pj9Sxsx5mX2fxX3yEgkE', 
                        value = '0.5', ), ),
                replacement = cobo_waas2.models.transaction_replacement.Transaction_replacement(
                    replaced_by_type = 'Resend', 
                    replaced_by_transaction_id = 'aff0e1cb-15b2-4e1f-9b9d-a9133715986f', 
                    replaced_by_transaction_hash = '239861be9a4afe080c359b7fe4a1d035945ec46256b1a0f44d1267c71de8ec28', 
                    replaced_type = 'Resend', 
                    replaced_transaction_id = 'aff0e1cb-15b2-4e1f-9b9d-a9133715986f', 
                    replaced_transaction_hash = '239861be9a4afe080c359b7fe4a1d035945ec46256b1a0f44d1267c71de8ec28', ),
                category = [
                    'Payment'
                    ],
                description = 'withdrawal to exchange trading account',
                is_loop = False,
                cobo_category = [
                    'AutoFueling'
                    ],
                extra = [
                    '{"extra_type":"BabylonBusinessInfo","btc_address_info":{"address":"tb1p8k9f36798z5wkfd3mlq00cjm82c7sp5hudlqaxkdvfw4xaywvw4qzzv2xz","chain_id":"SIGNET_BTC","memo":"","path":"44/1/5/0/4","encoding":"ENCODING_P2TR","pubkey":"xpub6FkyaGRDyh4hayxmbY4YX7q9fuuxt14dNoYv5TphsKLnChVXSaTxY7DPwdeN8Yys5FLhfuajG8pshdXWk9cTzBFUy5rVA4Lx9kwmFUqhZcC","x_only_pubkey":"","root_pubkey":"xpub661MyMwAqRbcGFdLxNuuQvnPTLFs1xHpFQz5iumoDnw4NPofkE8SSrtwUmoy3E52HtcxCH9wXCfhztuuiuusvB3kAb4nt9rT4bkXxujubKm","taproot_script_tree_hash":"","taproot_internal_address":""}}
'
                    ],
                fueling_info = cobo_waas2.models.transaction_fueling_info.TransactionFuelingInfo(
                    request_id = 'gas_760a1955-e212-4dfb-a8d0-e66312a1a051', 
                    transaction_id = 'b0530b27-104f-4338-87de-de01500326ea', 
                    main_transaction_id = 'b0530b27-104f-4338-87de-de01500326ea', ),
                created_timestamp = 1610445878970,
                updated_timestamp = 1610445878970,
                tss_request_id = '20240711114129000132315000003970',
                source_key_share_holder_group = cobo_waas2.models.source_group.SourceGroup(
                    key_share_holder_group_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479', 
                    tss_node_ids = [
                        'cobo5yb7BNEBwwp5XXedbhnzQfvQtp132W4dH4Jz4x4eDp4KA'
                        ], ),
                target_key_share_holder_group_id = 'fd9519ae-507b-4605-b108-04d4e5ffcdd3',
                addresses = [
                    null
                    ],
                wallet = None,
                vault_id = 'YPdbyVaVGqXXjkUsohHw',
                project_id = '0111039d-27fb-49ba-b172-6e0aa80e37ec',
                name = 'Vault name',
                root_pubkeys = [
                    cobo_waas2.models.root_pubkey.RootPubkey(
                        root_pubkey = 'xpub661MyMwAqRbcG4vPNi58VQJrXW8D9VzmauuRq2rTY3oUVnKGuLTxQxvvoEXgLvZ7N9GQXQkWVgKn1rzEUUEm4NdvrBKUqjpNJEnn2UL4rYq', 
                        curve = 'SECP256K1', )
                    ],
                chains = [
                    cobo_waas2.models.chain_info.ChainInfo(
                        chain_id = 'ETH', 
                        symbol = 'ETH', 
                        icon_url = 'https://d.cobo.com/public/logos/ETH.png', 
                        chain_identifier = 'ETH', 
                        explorer_tx_url = 'https://etherscan.io/tx/{txn_id}', 
                        explorer_address_url = 'https://etherscan.io/address/{address}', 
                        require_memo = False, 
                        confirming_threshold = 15, 
                        coinbase_maturity = 15, )
                    ],
                wallet_type = 'Custodial',
                wallet_subtypes = [
                    'Asset'
                    ],
                tokens = [
                    cobo_waas2.models.token_info.TokenInfo(
                        token_id = 'ETH_USDT', 
                        chain_id = 'ETH', 
                        asset_id = 'USDT', 
                        symbol = 'USDT', 
                        name = 'Tether USDT', 
                        decimal = 18, 
                        icon_url = 'https://d.cobo.com/public/logos/USDT.png', 
                        token_address = '0xdAC17F958D2ee523a2206206994597C13D831ec7', 
                        fee_token_id = 'ETH', 
                        can_deposit = True, 
                        can_withdraw = True, 
                        dust_threshold = '0.00000546', 
                        custodial_minimum_deposit_threshold = '0.0001', 
                        asset_model_type = 'Account', )
                    ],
                contract_address = '0x6B175474E89094C44Da98b954EedeAC495271d0F',
                wallet_subtype = 'Asset',
                token = cobo_waas2.models.token_info.TokenInfo(
                    token_id = 'ETH_USDT', 
                    chain_id = 'ETH', 
                    asset_id = 'USDT', 
                    symbol = 'USDT', 
                    name = 'Tether USDT', 
                    decimal = 18, 
                    icon_url = 'https://d.cobo.com/public/logos/USDT.png', 
                    token_address = '0xdAC17F958D2ee523a2206206994597C13D831ec7', 
                    fee_token_id = 'ETH', 
                    can_deposit = True, 
                    can_withdraw = True, 
                    dust_threshold = '0.00000546', 
                    custodial_minimum_deposit_threshold = '0.0001', 
                    asset_model_type = 'Account', ),
                feedback = 'Token has been added to the system',
                address = '0x0000000000000000000000000000000000000000',
                wallet_uuid = 'f47ac10b-58cc-4372-a567-0e02b2c3d479',
                balance = cobo_waas2.models.balance.Balance(
                    total = '100.0', 
                    available = '80.5', 
                    pending = '0', 
                    locked = '0', ),
                token_ids = '',
                operation_type = 'Added',
                order_id = 'O20250304-M1001-1001',
                merchant_id = 'M1001',
                payable_amount = '103.03',
                receive_address = '0x1234567890abcdef1234567890abcdef12345678',
                currency = 'USD',
                order_amount = '100.00',
                fee_amount = '2.00',
                exchange_rate = '0.99',
                expired_at = 1711324800,
                merchant_order_code = 'M20240201001',
                psp_order_code = 'P20240201001',
                received_token_amount = '103.0305',
                transactions = [
                    cobo_waas2.models.payment_transaction.PaymentTransaction(
                        tx_id = 'tx_123e4567-e89b-12d3-a456-426614174003', 
                        tx_hash = '0x742d35Cc6634C0532925a3b844Bc454e4438f44e', 
                        token_id = 'ETH_USDT', 
                        from_address = '0xF8e4bfc10A2821DF52D3322cB5170E5E9276b537', 
                        to_address = '0x15B95A2D8af95D9F48148667B6b8B3CdF89e4F15', 
                        amount = '0.15', 
                        status = 'Submitted', 
                        created_timestamp = 1610445878970, 
                        updated_timestamp = 1610445878970, )
                    ],
                settlement_status = 'Pending',
                amount_tolerance = '0.5',
                refund_id = 'R20250304-M1001-1001',
                amount = '0.0025',
                to_address = '0x9876543210abcdef1234567890abcdef12345678',
                refund_type = 'Merchant',
                charge_merchant_fee = False,
                merchant_fee_amount = '0.0001',
                merchant_fee_token_id = 'ETH_USDT',
                commission_fee = cobo_waas2.models.commission_fee.CommissionFee(
                    fee_amount = '', ),
                settlement_request_id = 'S20250304-1001',
                settlements = [
                    cobo_waas2.models.settlement_detail.SettlementDetail(
                        currency = 'USD', 
                        token_id = 'ETH_USDT', 
                        chain_id = 'ETH', 
                        merchant_id = 'M1001', 
                        amount = '500.00', 
                        settled_amount = '500.00', 
                        status = 'Pending', 
                        bank_account = cobo_waas2.models.bank_account.BankAccount(
                            bank_account_id = '123e4567-e89b-12d3-a456-426614174003', 
                            info = {"beneficiary_name":"John Doe","beneficiary_address":"123 Main St, Anytown, USA","account_number":"4111111111111111","bank_name":"ABC Bank","bank_country":"USA","bank_address":"456 Bank Ave, Cityville, USA","swift_or_bic":"ABCDEFGH"}, 
                            created_timestamp = 1744689600, 
                            updated_timestamp = 1744689600, ), 
                        transactions = [
                            cobo_waas2.models.payment_transaction.PaymentTransaction(
                                tx_id = 'tx_123e4567-e89b-12d3-a456-426614174003', 
                                tx_hash = '0x742d35Cc6634C0532925a3b844Bc454e4438f44e', 
                                token_id = 'ETH_USDT', 
                                from_address = '0xF8e4bfc10A2821DF52D3322cB5170E5E9276b537', 
                                to_address = '0x15B95A2D8af95D9F48148667B6b8B3CdF89e4F15', 
                                amount = '0.15', 
                                status = 'Submitted', 
                                created_timestamp = 1610445878970, 
                                updated_timestamp = 1610445878970, )
                            ], 
                        created_timestamp = 1744689600, 
                        updated_timestamp = 1744689600, 
                        crypto_address_id = 'addr_ethusdt_20250429T134512_a8c31f', 
                        payout_channel = 'Crypto', 
                        acquiring_type = 'Order', 
                        settlement_request_id = 'S20250304-1001', 
                        order_ids = [
                            'O20250304-M1001-1001'
                            ], 
                        commission_fee = cobo_waas2.models.commission_fee.CommissionFee(
                            fee_amount = '', ), 
                        bridging_fee = cobo_waas2.models.bridging_fee.BridgingFee(
                            fee_amount = '', 
                            received_token_id = '', 
                            received_amount = '', ), )
                    ],
                acquiring_type = 'Order',
                payout_channel = 'Crypto',
                settlement_type = 'Merchant',
                received_amount_fiat = '500.00',
                bank_account = cobo_waas2.models.bank_account.BankAccount(
                    bank_account_id = '123e4567-e89b-12d3-a456-426614174003', 
                    info = {"beneficiary_name":"John Doe","beneficiary_address":"123 Main St, Anytown, USA","account_number":"4111111111111111","bank_name":"ABC Bank","bank_country":"USA","bank_address":"456 Bank Ave, Cityville, USA","swift_or_bic":"ABCDEFGH"}, 
                    created_timestamp = 1744689600, 
                    updated_timestamp = 1744689600, ),
                payer_id = 'P20250619T0310056d7aa',
                custom_payer_id = 'user_abc_10001',
                chain = 'ETH',
                previous_address = '0xAbC123...DEF',
                updated_address = '0x789xyz...456',
                disposition_type = 'Refund',
                disposition_status = 'Submitted',
                destination_address = '0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb7',
                disposition_amount = '1.5',
                transaction_type = 'Deposit',
                review_status = 'PendingScreening',
                funds_status = 'Frozen'
            )
        else:
            return WebhookEventData(
                data_type = 'Transaction',
                transaction_id = 'aff0e1cb-15b2-4e1f-9b9d-a9133715986f',
                request_id = '760a1955-e212-4dfb-a8d0-e66312a1a051',
                wallet_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479',
                status = 'Submitted',
                chain_id = 'ETH',
                token_id = 'ETH_USDT',
                source = None,
                destination = None,
                initiator_type = 'API',
                created_timestamp = 1610445878970,
                updated_timestamp = 1610445878970,
                chains = [
                    cobo_waas2.models.chain_info.ChainInfo(
                        chain_id = 'ETH', 
                        symbol = 'ETH', 
                        icon_url = 'https://d.cobo.com/public/logos/ETH.png', 
                        chain_identifier = 'ETH', 
                        explorer_tx_url = 'https://etherscan.io/tx/{txn_id}', 
                        explorer_address_url = 'https://etherscan.io/address/{address}', 
                        require_memo = False, 
                        confirming_threshold = 15, 
                        coinbase_maturity = 15, )
                    ],
                wallet_type = 'Custodial',
                tokens = [
                    cobo_waas2.models.token_info.TokenInfo(
                        token_id = 'ETH_USDT', 
                        chain_id = 'ETH', 
                        asset_id = 'USDT', 
                        symbol = 'USDT', 
                        name = 'Tether USDT', 
                        decimal = 18, 
                        icon_url = 'https://d.cobo.com/public/logos/USDT.png', 
                        token_address = '0xdAC17F958D2ee523a2206206994597C13D831ec7', 
                        fee_token_id = 'ETH', 
                        can_deposit = True, 
                        can_withdraw = True, 
                        dust_threshold = '0.00000546', 
                        custodial_minimum_deposit_threshold = '0.0001', 
                        asset_model_type = 'Account', )
                    ],
                contract_address = '0x6B175474E89094C44Da98b954EedeAC495271d0F',
                wallet_subtype = 'Asset',
                address = '0x0000000000000000000000000000000000000000',
                wallet_uuid = 'f47ac10b-58cc-4372-a567-0e02b2c3d479',
                balance = cobo_waas2.models.balance.Balance(
                    total = '100.0', 
                    available = '80.5', 
                    pending = '0', 
                    locked = '0', ),
                token_ids = '',
                operation_type = 'Added',
                order_id = 'O20250304-M1001-1001',
                payable_amount = '103.03',
                receive_address = '0x1234567890abcdef1234567890abcdef12345678',
                currency = 'USD',
                order_amount = '100.00',
                fee_amount = '2.00',
                exchange_rate = '0.99',
                psp_order_code = 'P20240201001',
                received_token_amount = '103.0305',
                refund_id = 'R20250304-M1001-1001',
                amount = '0.0025',
                to_address = '0x9876543210abcdef1234567890abcdef12345678',
                settlement_request_id = 'S20250304-1001',
                settlements = [
                    cobo_waas2.models.settlement_detail.SettlementDetail(
                        currency = 'USD', 
                        token_id = 'ETH_USDT', 
                        chain_id = 'ETH', 
                        merchant_id = 'M1001', 
                        amount = '500.00', 
                        settled_amount = '500.00', 
                        status = 'Pending', 
                        bank_account = cobo_waas2.models.bank_account.BankAccount(
                            bank_account_id = '123e4567-e89b-12d3-a456-426614174003', 
                            info = {"beneficiary_name":"John Doe","beneficiary_address":"123 Main St, Anytown, USA","account_number":"4111111111111111","bank_name":"ABC Bank","bank_country":"USA","bank_address":"456 Bank Ave, Cityville, USA","swift_or_bic":"ABCDEFGH"}, 
                            created_timestamp = 1744689600, 
                            updated_timestamp = 1744689600, ), 
                        transactions = [
                            cobo_waas2.models.payment_transaction.PaymentTransaction(
                                tx_id = 'tx_123e4567-e89b-12d3-a456-426614174003', 
                                tx_hash = '0x742d35Cc6634C0532925a3b844Bc454e4438f44e', 
                                token_id = 'ETH_USDT', 
                                from_address = '0xF8e4bfc10A2821DF52D3322cB5170E5E9276b537', 
                                to_address = '0x15B95A2D8af95D9F48148667B6b8B3CdF89e4F15', 
                                amount = '0.15', 
                                status = 'Submitted', 
                                created_timestamp = 1610445878970, 
                                updated_timestamp = 1610445878970, )
                            ], 
                        created_timestamp = 1744689600, 
                        updated_timestamp = 1744689600, 
                        crypto_address_id = 'addr_ethusdt_20250429T134512_a8c31f', 
                        payout_channel = 'Crypto', 
                        acquiring_type = 'Order', 
                        settlement_request_id = 'S20250304-1001', 
                        order_ids = [
                            'O20250304-M1001-1001'
                            ], 
                        commission_fee = cobo_waas2.models.commission_fee.CommissionFee(
                            fee_amount = '', ), 
                        bridging_fee = cobo_waas2.models.bridging_fee.BridgingFee(
                            fee_amount = '', 
                            received_token_id = '', 
                            received_amount = '', ), )
                    ],
                acquiring_type = 'Order',
                payer_id = 'P20250619T0310056d7aa',
                custom_payer_id = 'user_abc_10001',
                chain = 'ETH',
                previous_address = '0xAbC123...DEF',
                updated_address = '0x789xyz...456',
                disposition_type = 'Refund',
                disposition_status = 'Submitted',
                transaction_type = 'Deposit',
                review_status = 'PendingScreening',
                funds_status = 'Frozen',
        )
        """

    def testWebhookEventData(self):
        """Test WebhookEventData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.tokenization_list_token_info_response import TokenizationListTokenInfoResponse


class TestTokenizationListTokenInfoResponse(unittest.TestCase):
    """TokenizationListTokenInfoResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TokenizationListTokenInfoResponse:
        """Test TokenizationListTokenInfoResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TokenizationListTokenInfoResponse`
        """
        model = TokenizationListTokenInfoResponse()
        if include_optional:
            return TokenizationListTokenInfoResponse(
                data = [
                    cobo_waas2.models.tokenization_token_info.TokenizationTokenInfo(
                        token_id = 'ETH_CUSD2', 
                        chain_id = 'ETH', 
                        token_address = '0x1234567890123456789012345678901234567890', 
                        token_name = 'CUSD', 
                        token_symbol = 'CUSD', 
                        token_standard = 'ERC20', 
                        decimals = 18, 
                        token_access_activated = False, 
                        status = 'Active', 
                        total_supply = '133399', 
                        holdings = '12399', )
                    ],
                pagination = cobo_waas2.models.pagination.Pagination(
                    before = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGmk1', 
                    after = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGSAk', 
                    total_count = 10000, )
            )
        else:
            return TokenizationListTokenInfoResponse(
                data = [
                    cobo_waas2.models.tokenization_token_info.TokenizationTokenInfo(
                        token_id = 'ETH_CUSD2', 
                        chain_id = 'ETH', 
                        token_address = '0x1234567890123456789012345678901234567890', 
                        token_name = 'CUSD', 
                        token_symbol = 'CUSD', 
                        token_standard = 'ERC20', 
                        decimals = 18, 
                        token_access_activated = False, 
                        status = 'Active', 
                        total_supply = '133399', 
                        holdings = '12399', )
                    ],
                pagination = cobo_waas2.models.pagination.Pagination(
                    before = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGmk1', 
                    after = 'RqeEoTkgKG5rpzqYzg2Hd3szmPoj2cE7w5jWwShz3C1vyGSAk', 
                    total_count = 10000, ),
        )
        """

    def testTokenizationListTokenInfoResponse(self):
        """Test TokenizationListTokenInfoResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

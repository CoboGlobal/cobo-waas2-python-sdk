# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.tokenization_mint_token_request import TokenizationMintTokenRequest


class TestTokenizationMintTokenRequest(unittest.TestCase):
    """TokenizationMintTokenRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TokenizationMintTokenRequest:
        """Test TokenizationMintTokenRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TokenizationMintTokenRequest`
        """
        model = TokenizationMintTokenRequest()
        if include_optional:
            return TokenizationMintTokenRequest(
                source = None,
                mints = [
                    cobo_waas2.models.tokenization_mint_token_params_mints_inner.TokenizationMintTokenParams_mints_inner(
                        amount = '0.99', 
                        to_address = '0x051A924H4dCb264226d7B036C2893a0D344', )
                    ],
                app_initiator = 'steve@example.com',
                fee = None,
                request_id = 'f47ac10b-58cc-4372-a567-0e02b2c3d479'
            )
        else:
            return TokenizationMintTokenRequest(
                source = None,
                mints = [
                    cobo_waas2.models.tokenization_mint_token_params_mints_inner.TokenizationMintTokenParams_mints_inner(
                        amount = '0.99', 
                        to_address = '0x051A924H4dCb264226d7B036C2893a0D344', )
                    ],
                fee = None,
        )
        """

    def testTokenizationMintTokenRequest(self):
        """Test TokenizationMintTokenRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

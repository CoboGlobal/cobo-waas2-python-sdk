# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.payment_subscription_plan_detail import PaymentSubscriptionPlanDetail


class TestPaymentSubscriptionPlanDetail(unittest.TestCase):
    """PaymentSubscriptionPlanDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaymentSubscriptionPlanDetail:
        """Test PaymentSubscriptionPlanDetail
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaymentSubscriptionPlanDetail`
        """
        model = PaymentSubscriptionPlanDetail()
        if include_optional:
            return PaymentSubscriptionPlanDetail(
                blockchain_plan_id = '',
                plan_id = '123e457-e89b-12d3-a456-426614174004',
                developer_plan_id = '123e457-e89b-12d3-a456-426614174004',
                period_type = 'Yearly',
                periods = 12,
                interval = 2592000,
                amount = '500.00',
                token_id = 'ETH_USDT',
                currency = 'USD'
            )
        else:
            return PaymentSubscriptionPlanDetail(
                plan_id = '123e457-e89b-12d3-a456-426614174004',
                developer_plan_id = '123e457-e89b-12d3-a456-426614174004',
                period_type = 'Yearly',
                periods = 12,
                interval = 2592000,
                amount = '500.00',
        )
        """

    def testPaymentSubscriptionPlanDetail(self):
        """Test PaymentSubscriptionPlanDetail"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

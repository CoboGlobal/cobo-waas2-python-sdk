# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.sol_contract_call_destination import SolContractCallDestination


class TestSolContractCallDestination(unittest.TestCase):
    """SolContractCallDestination unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SolContractCallDestination:
        """Test SolContractCallDestination
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SolContractCallDestination`
        """
        model = SolContractCallDestination()
        if include_optional:
            return SolContractCallDestination(
                destination_type = 'EVM_Contract',
                instructions = [
                    cobo_waas2.models.sol_instruction.SOL Instruction(
                        accounts = [
                            cobo_waas2.models.sol_instruction_account.SOL Instruction Account(
                                pubkey = 'E4MhQWiqCLER3fFZNf8LyQFpLWW3BRxtsR5eps3c3vNS', 
                                is_signer = True, 
                                is_writable = True, )
                            ], 
                        data = '37u9WtQpcm6ULa3WRQHmj49EPs4if7o9f1jSRVZpm2dvihR9C8jY4NqEwXUbLwx15HBSNcP1', 
                        program_id = 'MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr', )
                    ],
                address_lookup_table_accounts = [
                    cobo_waas2.models.sol_address_lookup_table_account.SOL Address Lookup Table Account(
                        alt_account_key = 'ALT1Xyz9A1b2C3D4E5F6G7H8I9J0K1L2M3N4O5P6Q', 
                        addresses = [
                            'G7a1b2C3D4E5F6G7H8I9J0K1L2M3N4O5P6Q7R8S9'
                            ], )
                    ]
            )
        else:
            return SolContractCallDestination(
                destination_type = 'EVM_Contract',
                instructions = [
                    cobo_waas2.models.sol_instruction.SOL Instruction(
                        accounts = [
                            cobo_waas2.models.sol_instruction_account.SOL Instruction Account(
                                pubkey = 'E4MhQWiqCLER3fFZNf8LyQFpLWW3BRxtsR5eps3c3vNS', 
                                is_signer = True, 
                                is_writable = True, )
                            ], 
                        data = '37u9WtQpcm6ULa3WRQHmj49EPs4if7o9f1jSRVZpm2dvihR9C8jY4NqEwXUbLwx15HBSNcP1', 
                        program_id = 'MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr', )
                    ],
        )
        """

    def testSolContractCallDestination(self):
        """Test SolContractCallDestination"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

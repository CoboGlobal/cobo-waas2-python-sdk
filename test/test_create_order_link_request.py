# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cobo_waas2.models.create_order_link_request import CreateOrderLinkRequest


class TestCreateOrderLinkRequest(unittest.TestCase):
    """CreateOrderLinkRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateOrderLinkRequest:
        """Test CreateOrderLinkRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateOrderLinkRequest`
        """
        model = CreateOrderLinkRequest()
        if include_optional:
            return CreateOrderLinkRequest(
                business_info = cobo_waas2.models.order_link_business_info.OrderLinkBusinessInfo(
                    token_ids = ["ETH_USDT","SOL_USDC","TRON_USDT"], 
                    custom_exchange_rates = [{"token_id":"ETH_USDT","exchange_rate":"0.99"},{"token_id":"SOL_USDC","exchange_rate":"1.02"}], 
                    currency = '', 
                    fee_amount = '2.00', 
                    merchant_id = '1001', 
                    order_amount = '100.00', 
                    merchant_order_code = 'M20240201001', 
                    psp_order_code = 'P20240201001', 
                    expired_in = 1800, 
                    use_dedicated_address = False, ),
                display_info = cobo_waas2.models.link_display_info.LinkDisplayInfo(
                    developer_name = 'Acme Payment Solutions', 
                    logo = 'https://example.com/logo.png', )
            )
        else:
            return CreateOrderLinkRequest(
                business_info = cobo_waas2.models.order_link_business_info.OrderLinkBusinessInfo(
                    token_ids = ["ETH_USDT","SOL_USDC","TRON_USDT"], 
                    custom_exchange_rates = [{"token_id":"ETH_USDT","exchange_rate":"0.99"},{"token_id":"SOL_USDC","exchange_rate":"1.02"}], 
                    currency = '', 
                    fee_amount = '2.00', 
                    merchant_id = '1001', 
                    order_amount = '100.00', 
                    merchant_order_code = 'M20240201001', 
                    psp_order_code = 'P20240201001', 
                    expired_in = 1800, 
                    use_dedicated_address = False, ),
        )
        """

    def testCreateOrderLinkRequest(self):
        """Test CreateOrderLinkRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
